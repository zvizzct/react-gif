{"version":3,"sources":["components/AddCategory.js","components/Footer.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertTag.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","Footer","className","href","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAIhB,SACE,uBACEO,YAAY,SACZC,KAAK,OACLC,MAAOV,EACPW,SAlBoB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,aCJdG,EAAS,WACpB,OACE,mCACE,sBAAKC,UAAU,oBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,0CACA,mBAAGC,KAAK,IAAR,gCAEF,sBAAKD,UAAU,cAAf,UACE,uCACA,qEAEF,sBAAKA,UAAU,cAAf,UACE,qCACA,mBAAGC,KAAK,IAAIH,OAAO,SAAnB,mCAKJ,oBAAIE,UAAU,eAAd,kCACA,mBAAGA,UAAU,QAAb,kD,+BCtBOE,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,0DAC0CC,UAC7DH,GAFmB,sDAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,qBAAKL,UAAU,yCAAf,SACE,mBAAGC,KAAMI,EAAKL,UAAU,YAAxB,SACE,qBAAKA,UAAU,WAAWmB,IAAKd,EAAKe,IAAKL,SCFpCM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SACxB,ECH0B,SAACA,GAC3B,MAA0BlB,mBAAS,CACjCyB,KAAM,GACNY,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OARAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACC,GACtBH,EAAS,CACPd,KAAMiB,EACNL,SAAS,SAGZ,CAACnB,IACGoB,EDV2BK,CAAazB,GAAjCa,EAAd,EAAQN,KAAcY,EAAtB,EAAsBA,QAEtB,OACE,yBAAStB,UAAU,gBAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,qCAAd,SAAoDG,IACnDmB,GACC,mBAAGtB,UAAU,oCAAb,qBAEF,qBAAKA,UAAU,YAAf,SACGgB,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,eEQnBe,EAnBM,WACnB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACE,iCACE,sBAAKgB,UAAU,gBAAf,UACE,uDACA,mBAAGA,UAAU,SAAb,qCACA,cAAC,EAAD,CAAahB,cAAeA,OAG7B8C,EAAWlB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,MAEhB,cAAC,EAAD,Q,MCbN4B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.178d4c5e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 0) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        placeholder=\"Nobita\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"contenedor-footer\">\r\n        <div className=\"content-foo\">\r\n          <h4>Linkedin</h4>\r\n          <a href=\"#\">(Working on it)</a>\r\n        </div>\r\n        <div className=\"content-foo\">\r\n          <h4>Email</h4>\r\n          <p>victor.puerta01@estudiant.upf.edu</p>\r\n        </div>\r\n        <div className=\"content-foo\">\r\n          <h4>Web</h4>\r\n          <a href=\"#\" target=\"_blank\">\r\n            (Working on it)\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"titulo-final\">&copy;VÃ­ctor Puerta</h2>\r\n      <p className=\"curso\">React: curso de Fernando Herrera</p>\r\n    </footer>\r\n  );\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(\r\n    category\r\n  )}&api_key=d1Up34992UkfoxRA4qv35qJSG7pHGGox`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  //const { id, tittle, urlG } = gifs;\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <a href={url} className=\"card-link\">\r\n        <img className=\"card-img\" src={url} alt={title} />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <section className=\"section-cards\">\r\n      <div className=\"container\">\r\n        <h3 className=\" animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && (\r\n          <p className=\" animate__animated animate__flash\">Loading</p>\r\n        )}\r\n        <div className=\"card-grid\">\r\n          {images.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { Footer } from \"./components/Footer\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One punch\"]);\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"section-input\">\r\n        <h2>React Gif App - GIPHY</h2>\r\n        <p className=\"phrase\">Prueba a buscar un gif!</p>\r\n        <AddCategory setCategories={setCategories} />\r\n      </div>\r\n\r\n      {categories.map((category) => (\r\n        <GifGrid key={category} category={category} />\r\n      ))}\r\n      <Footer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport GifExpertApp from \"./GifExpertTag\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}